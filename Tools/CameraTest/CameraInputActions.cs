//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Tools/CameraTest/CameraInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CameraInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CameraInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CameraInputActions"",
    ""maps"": [
        {
            ""name"": ""Controller"",
            ""id"": ""a231cfbd-210e-490e-974c-816a62a7fff8"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b99429d1-2a0d-4d04-badf-ca002555db63"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""09cc14cd-4a3f-44b2-8c9d-c18508c7f48e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Faster"",
                    ""type"": ""Button"",
                    ""id"": ""df417e02-4932-4063-b3e2-74b436473425"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slower"",
                    ""type"": ""Button"",
                    ""id"": ""a4e51456-29a2-4acb-bf32-4dd71dd79d6b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCameraUp"",
                    ""type"": ""Button"",
                    ""id"": ""fffbf62c-6a11-4774-88d9-17dd6131e6c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCameraDown"",
                    ""type"": ""Button"",
                    ""id"": ""d2a737d1-7df2-4d98-97d4-920f8bb5a0ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCameraRight"",
                    ""type"": ""Button"",
                    ""id"": ""e5dbb91e-a534-4431-8e5d-8455b13df8a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCameraLeft"",
                    ""type"": ""Button"",
                    ""id"": ""00316319-f28b-4083-ac91-1097a377e678"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Play/Select"",
                    ""type"": ""Button"",
                    ""id"": ""fed877e4-0e02-47f1-8b7a-32375b2647ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inverse"",
                    ""type"": ""Button"",
                    ""id"": ""af1b3295-eb2d-48cf-b678-36f9d0832aaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Destroy/Back"",
                    ""type"": ""Button"",
                    ""id"": ""c75f6719-cd3d-4238-8ef5-9451652b2cfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookAt"",
                    ""type"": ""Button"",
                    ""id"": ""5a48d801-3143-4718-80e6-238226ef9d36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoUp"",
                    ""type"": ""Button"",
                    ""id"": ""2e5ea232-39eb-49df-b4c4-b07a0c591b34"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoDown"",
                    ""type"": ""Button"",
                    ""id"": ""bd302b38-58dc-4c02-bb1b-ba909fb44270"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb20a35e-4fee-4ec5-b1c5-16e5b358104e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""229efe66-464e-4e8b-a2f5-018ed9a2b363"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a0a3086-6104-4cce-abab-268a1c1978d0"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Faster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c735dfb7-bbc0-4bd8-8631-587126019f42"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7857c759-3a53-40f0-9b07-440fb90582e3"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCameraUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""312cd403-be50-44ae-8543-6b5c69ac431c"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCameraDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f8ba0e5-b3d1-43e8-bf79-3f345499943c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Play/Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4285d3ae-6952-43ac-8613-33caf677e84b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93a4f593-d120-4a1c-aa2c-c6ef86e0ccdd"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d8eddd3-988b-4601-83a6-2503650db380"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCameraLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31a6f168-38e1-4a10-b64a-c4a77ef36aae"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCameraRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5c2361d-4488-49db-8d27-c7dda1497ffa"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destroy/Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60c63687-f470-4726-bf0a-36d38572a9d4"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookAt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70e098b5-7627-4fae-85b8-9e1ba1ca54d0"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controller
        m_Controller = asset.FindActionMap("Controller", throwIfNotFound: true);
        m_Controller_Move = m_Controller.FindAction("Move", throwIfNotFound: true);
        m_Controller_Rotation = m_Controller.FindAction("Rotation", throwIfNotFound: true);
        m_Controller_Faster = m_Controller.FindAction("Faster", throwIfNotFound: true);
        m_Controller_Slower = m_Controller.FindAction("Slower", throwIfNotFound: true);
        m_Controller_ChangeCameraUp = m_Controller.FindAction("ChangeCameraUp", throwIfNotFound: true);
        m_Controller_ChangeCameraDown = m_Controller.FindAction("ChangeCameraDown", throwIfNotFound: true);
        m_Controller_ChangeCameraRight = m_Controller.FindAction("ChangeCameraRight", throwIfNotFound: true);
        m_Controller_ChangeCameraLeft = m_Controller.FindAction("ChangeCameraLeft", throwIfNotFound: true);
        m_Controller_PlaySelect = m_Controller.FindAction("Play/Select", throwIfNotFound: true);
        m_Controller_Inverse = m_Controller.FindAction("Inverse", throwIfNotFound: true);
        m_Controller_DestroyBack = m_Controller.FindAction("Destroy/Back", throwIfNotFound: true);
        m_Controller_LookAt = m_Controller.FindAction("LookAt", throwIfNotFound: true);
        m_Controller_GoUp = m_Controller.FindAction("GoUp", throwIfNotFound: true);
        m_Controller_GoDown = m_Controller.FindAction("GoDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controller
    private readonly InputActionMap m_Controller;
    private IControllerActions m_ControllerActionsCallbackInterface;
    private readonly InputAction m_Controller_Move;
    private readonly InputAction m_Controller_Rotation;
    private readonly InputAction m_Controller_Faster;
    private readonly InputAction m_Controller_Slower;
    private readonly InputAction m_Controller_ChangeCameraUp;
    private readonly InputAction m_Controller_ChangeCameraDown;
    private readonly InputAction m_Controller_ChangeCameraRight;
    private readonly InputAction m_Controller_ChangeCameraLeft;
    private readonly InputAction m_Controller_PlaySelect;
    private readonly InputAction m_Controller_Inverse;
    private readonly InputAction m_Controller_DestroyBack;
    private readonly InputAction m_Controller_LookAt;
    private readonly InputAction m_Controller_GoUp;
    private readonly InputAction m_Controller_GoDown;
    public struct ControllerActions
    {
        private @CameraInputActions m_Wrapper;
        public ControllerActions(@CameraInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Controller_Move;
        public InputAction @Rotation => m_Wrapper.m_Controller_Rotation;
        public InputAction @Faster => m_Wrapper.m_Controller_Faster;
        public InputAction @Slower => m_Wrapper.m_Controller_Slower;
        public InputAction @ChangeCameraUp => m_Wrapper.m_Controller_ChangeCameraUp;
        public InputAction @ChangeCameraDown => m_Wrapper.m_Controller_ChangeCameraDown;
        public InputAction @ChangeCameraRight => m_Wrapper.m_Controller_ChangeCameraRight;
        public InputAction @ChangeCameraLeft => m_Wrapper.m_Controller_ChangeCameraLeft;
        public InputAction @PlaySelect => m_Wrapper.m_Controller_PlaySelect;
        public InputAction @Inverse => m_Wrapper.m_Controller_Inverse;
        public InputAction @DestroyBack => m_Wrapper.m_Controller_DestroyBack;
        public InputAction @LookAt => m_Wrapper.m_Controller_LookAt;
        public InputAction @GoUp => m_Wrapper.m_Controller_GoUp;
        public InputAction @GoDown => m_Wrapper.m_Controller_GoDown;
        public InputActionMap Get() { return m_Wrapper.m_Controller; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerActions set) { return set.Get(); }
        public void SetCallbacks(IControllerActions instance)
        {
            if (m_Wrapper.m_ControllerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnMove;
                @Rotation.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRotation;
                @Faster.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFaster;
                @Faster.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFaster;
                @Faster.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFaster;
                @Slower.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSlower;
                @Slower.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSlower;
                @Slower.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSlower;
                @ChangeCameraUp.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraUp;
                @ChangeCameraUp.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraUp;
                @ChangeCameraUp.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraUp;
                @ChangeCameraDown.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraDown;
                @ChangeCameraDown.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraDown;
                @ChangeCameraDown.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraDown;
                @ChangeCameraRight.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraRight;
                @ChangeCameraRight.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraRight;
                @ChangeCameraRight.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraRight;
                @ChangeCameraLeft.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraLeft;
                @ChangeCameraLeft.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraLeft;
                @ChangeCameraLeft.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnChangeCameraLeft;
                @PlaySelect.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnPlaySelect;
                @PlaySelect.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnPlaySelect;
                @PlaySelect.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnPlaySelect;
                @Inverse.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnInverse;
                @Inverse.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnInverse;
                @Inverse.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnInverse;
                @DestroyBack.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnDestroyBack;
                @DestroyBack.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnDestroyBack;
                @DestroyBack.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnDestroyBack;
                @LookAt.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLookAt;
                @LookAt.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLookAt;
                @LookAt.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLookAt;
                @GoUp.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnGoUp;
                @GoUp.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnGoUp;
                @GoUp.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnGoUp;
                @GoDown.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnGoDown;
                @GoDown.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnGoDown;
                @GoDown.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnGoDown;
            }
            m_Wrapper.m_ControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @Faster.started += instance.OnFaster;
                @Faster.performed += instance.OnFaster;
                @Faster.canceled += instance.OnFaster;
                @Slower.started += instance.OnSlower;
                @Slower.performed += instance.OnSlower;
                @Slower.canceled += instance.OnSlower;
                @ChangeCameraUp.started += instance.OnChangeCameraUp;
                @ChangeCameraUp.performed += instance.OnChangeCameraUp;
                @ChangeCameraUp.canceled += instance.OnChangeCameraUp;
                @ChangeCameraDown.started += instance.OnChangeCameraDown;
                @ChangeCameraDown.performed += instance.OnChangeCameraDown;
                @ChangeCameraDown.canceled += instance.OnChangeCameraDown;
                @ChangeCameraRight.started += instance.OnChangeCameraRight;
                @ChangeCameraRight.performed += instance.OnChangeCameraRight;
                @ChangeCameraRight.canceled += instance.OnChangeCameraRight;
                @ChangeCameraLeft.started += instance.OnChangeCameraLeft;
                @ChangeCameraLeft.performed += instance.OnChangeCameraLeft;
                @ChangeCameraLeft.canceled += instance.OnChangeCameraLeft;
                @PlaySelect.started += instance.OnPlaySelect;
                @PlaySelect.performed += instance.OnPlaySelect;
                @PlaySelect.canceled += instance.OnPlaySelect;
                @Inverse.started += instance.OnInverse;
                @Inverse.performed += instance.OnInverse;
                @Inverse.canceled += instance.OnInverse;
                @DestroyBack.started += instance.OnDestroyBack;
                @DestroyBack.performed += instance.OnDestroyBack;
                @DestroyBack.canceled += instance.OnDestroyBack;
                @LookAt.started += instance.OnLookAt;
                @LookAt.performed += instance.OnLookAt;
                @LookAt.canceled += instance.OnLookAt;
                @GoUp.started += instance.OnGoUp;
                @GoUp.performed += instance.OnGoUp;
                @GoUp.canceled += instance.OnGoUp;
                @GoDown.started += instance.OnGoDown;
                @GoDown.performed += instance.OnGoDown;
                @GoDown.canceled += instance.OnGoDown;
            }
        }
    }
    public ControllerActions @Controller => new ControllerActions(this);
    public interface IControllerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnFaster(InputAction.CallbackContext context);
        void OnSlower(InputAction.CallbackContext context);
        void OnChangeCameraUp(InputAction.CallbackContext context);
        void OnChangeCameraDown(InputAction.CallbackContext context);
        void OnChangeCameraRight(InputAction.CallbackContext context);
        void OnChangeCameraLeft(InputAction.CallbackContext context);
        void OnPlaySelect(InputAction.CallbackContext context);
        void OnInverse(InputAction.CallbackContext context);
        void OnDestroyBack(InputAction.CallbackContext context);
        void OnLookAt(InputAction.CallbackContext context);
        void OnGoUp(InputAction.CallbackContext context);
        void OnGoDown(InputAction.CallbackContext context);
    }
}
